HTML:
• What is the purpose of the doctype declaration?
• Explain the difference between <div> and <span>.

CSS:
• What is the box model in CSS?
• Describe the difference between margin and padding.

JavaScript Basics:
• Explain the concept of hoisting in JavaScript.
• What is the difference between let, const, and var?

JavaScript Functions:
• What is a closure in JavaScript?
• Explain the differences between arrow functions and regular functions.

DOM Manipulation:
• How does event delegation work in the DOM?
• Explain the purpose of the data- attributes.

Responsive Design:
• What is the importance of media queries in responsive design?
• Describe the difference between em and rem units in CSS.

CSS Flexbox:
• What is the flexbox model, and how does it work?
• Explain the purpose of justify-content and align-items in flexbox.

CSS Grid:
• How does CSS Grid differ from Flexbox?
• Explain the use of the grid-template-columns property.

AJAX:
• What is AJAX, and how does it work?
• Explain the role of the XMLHttpRequest object.

RESTful API Concepts:
• What is REST, and how does it differ from SOAP?
• Describe the common HTTP methods used in RESTful APIs.

React Basics:
• What is JSX in React?
• Explain the purpose of state in React components.

React Components:
• Differentiate between functional and class components in React.
• Describe the lifecycle methods in a React class component.

React Hooks:
• Explain the use of the useState hook in React.
• What is the useEffect hook, and why is it used?

Redux:
• What problem does Redux solve in a React application?
• Explain the roles of actions, reducers, and the store in Redux.

Web Performance Optimization:
• How can you optimize website performance?
• Explain lazy loading and its benefits.

Cross-Origin Resource Sharing (CORS):
• What is CORS, and how does it work?
• Describe how to handle CORS issues in a web application.

Web Security:
• What is Cross-Site Scripting (XSS), and how can it be prevented?
• Explain Cross-Site Request Forgery (CSRF) and its prevention methods.

Version Control (Git):
• Describe the purpose of Git and how it differs from other version control systems.
• Explain the Git branching strategy and the use of merge vs. rebase.

Build Tools (e.g., Webpack):
• What is Webpack, and how does it improve the frontend development workflow?
• Explain the concept of code splitting in Webpack.

Testing in Frontend Development:
• What are the benefits of unit testing in a frontend application?
• Describe the differences between unit testing and integration testing.
